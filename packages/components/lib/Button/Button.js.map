{"version":3,"sources":["../../src/Button/Button.js"],"names":["Button","_handleOnPress","props","onPress","accessibilityLabel","color","touchSoundDisabled","title","hasTVPreferredFocus","nextFocusDown","nextFocusForward","nextFocusLeft","nextFocusRight","nextFocusUp","disabled","outline","buttonStyles","styles","button","textStyles","text","push","backgroundColor","defaultColor","accessibilityState","buttonDisabled","textDisabled","formattedTitle","Platform","OS","toUpperCase","Touchable","TouchableNativeFeedback","TouchableOpacity","container","Component","StyleSheet","create","marginVertical","alignItems","select","ios","android","elevation","borderRadius","textAlign","margin","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  StyleSheet,\n  TouchableNativeFeedback,\n  TouchableOpacity,\n  View,\n  Platform,\n  Text,\n} from 'react-native';\n\nexport class Button extends Component {\n  _handleOnPress = () => {\n    this.props.onPress && this.props.onPress();\n  };\n\n  render() {\n    const {\n      accessibilityLabel,\n      color,\n      onPress,\n      touchSoundDisabled,\n      title,\n      hasTVPreferredFocus,\n      nextFocusDown,\n      nextFocusForward,\n      nextFocusLeft,\n      nextFocusRight,\n      nextFocusUp,\n      disabled,\n      outline,\n    } = this.props;\n    const buttonStyles = [styles.button];\n    const textStyles = [styles.text];\n    if (color) {\n      if (outline) {\n        textStyles.push({ color: color });\n      } else {\n        buttonStyles.push({ backgroundColor: color });\n      }\n    } else {\n      const defaultColor = '#57c75e';\n      if (outline) {\n        textStyles.push({ color: defaultColor });\n      } else {\n        buttonStyles.push({ backgroundColor: defaultColor });\n      }\n    }\n    const accessibilityState = {};\n    if (disabled) {\n      buttonStyles.push(styles.buttonDisabled);\n      textStyles.push(styles.textDisabled);\n      accessibilityState.disabled = true;\n    }\n\n    const formattedTitle =\n      Platform.OS === 'android' ? title.toUpperCase() : title;\n\n    const Touchable =\n      Platform.OS === 'android' ? TouchableNativeFeedback : TouchableOpacity;\n\n    return (\n      <Touchable\n        accessibilityLabel={accessibilityLabel}\n        accessibilityRole=\"button\"\n        accessibilityState={accessibilityState}\n        hasTVPreferredFocus={hasTVPreferredFocus}\n        nextFocusDown={nextFocusDown}\n        nextFocusForward={nextFocusForward}\n        nextFocusLeft={nextFocusLeft}\n        nextFocusRight={nextFocusRight}\n        nextFocusUp={nextFocusUp}\n        disabled={disabled}\n        onPress={onPress}\n        touchSoundDisabled={touchSoundDisabled}\n        style={styles.container}>\n        <View style={buttonStyles}>\n          <Text style={textStyles} disabled={disabled}>\n            {formattedTitle}\n          </Text>\n        </View>\n      </Touchable>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    marginVertical: 10,\n    alignItems: 'center',\n  },\n  button: Platform.select({\n    ios: {},\n    android: {\n      elevation: 4,\n      // Material design blue from https://material.google.com/style/color.html#color-color-palette\n      backgroundColor: '#2196F3',\n      borderRadius: 2,\n    },\n  }),\n  text: {\n    textAlign: 'center',\n    margin: 8,\n    ...Platform.select({\n      ios: {\n        fontSize: 18,\n      },\n      android: {\n        fontWeight: '500',\n      },\n    }),\n    color: 'white',\n    fontSize: 18,\n  },\n  buttonDisabled: Platform.select({\n    ios: {},\n    android: {\n      elevation: 0,\n      backgroundColor: '#dfdfdf',\n    },\n  }),\n  textDisabled: Platform.select({\n    ios: {\n      color: '#cdcdcd',\n    },\n    android: {\n      color: '#a1a1a1',\n    },\n  }),\n});\n\nexport default Button;\n"],"file":"Button.js"}